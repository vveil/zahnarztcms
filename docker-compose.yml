version: "3.8"
services:
  payload:
    image: node:18-alpine
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    working_dir: /home/node/app/
    command: sh -c "yarn install && yarn dev"
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zahnarztcms.rule=Host(`zahncms.niklas.ai`)"
      - "traefik.http.services.zahnarztcms.loadbalancer.server.port=3010"
      - "traefik.http.routers.zahnarztcms.entrypoints=websecure"
      - "traefik.http.routers.zahnarztcms.tls.certresolver=myresolver"
    env_file:
      - .env
    environment:
      DATABASE_URI: postgres://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@postgres:5432/${DATABASE_NAME}
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3010/api/_health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - webnet

  postgres:
    image: postgres:15-alpine
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_MAX_CONNECTIONS: 100
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    networks:
      - webnet

volumes:
  node_modules:
  pgdata:
    driver: local

networks:
  webnet:
    external: true
